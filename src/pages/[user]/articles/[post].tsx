import Head from "next/head";
import Link from "next/link";
import React, { useEffect, useState } from "react";

import AuthValidationErrors from "components/AuthValidationErrors";
import AppLayout from "components/Layouts/AppLayout";
import { useAuth } from "hooks/useAuth";
import { usePosts } from "hooks/usePosts";
import { useUsers } from "hooks/useUsers";

import type { NextPage } from "next";
import type { Errors } from "types/errors";

const Post: NextPage = () => {
  const [errors, setErrors] = useState<Errors>([]);
  const [isEditable, setIsEditable] = useState(false);
  const [text, setText] = useState("");

  const { auth, logout } = useAuth();
  const { post, updatePost, deletePost } = usePosts();
  const { user } = useUsers();

  const toggleEditable = () => {
    setIsEditable((prev) => !prev);
  };

  const submitForm = async (e: { preventDefault: () => void }) => {
    e.preventDefault();

    await updatePost({ text, setErrors });

    toggleEditable();
  };

  const deleteConfirm = async () => {
    window.confirm("投稿を削除しますか？") && (await deletePost());
  };

  useEffect(() => {
    post && setText(post.text);
  }, [post]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppLayout>
        {/* Validation Errors */}
        <AuthValidationErrors errors={errors} />

        <button type="button" onClick={logout}>
          Logout
        </button>

        {isEditable ? (
          <form onSubmit={submitForm}>
            <textarea
              id="name"
              value={text}
              onChange={(e) => setText(e.target.value)}
            />
            <button type="submit">保存</button>
          </form>
        ) : (
          <>
            {auth?.id === user?.id && (
              <>
                <button onClick={toggleEditable}>編集</button>
                <button onClick={deleteConfirm}>削除</button>
              </>
            )}
            {post && (
              <>
                <div>{post.text}</div>
                <Link href={`/${post.user_id}`}>
                  <a>{post.created_by}</a>
                </Link>
              </>
            )}
          </>
        )}
      </AppLayout>
    </>
  );
};

export default Post;
