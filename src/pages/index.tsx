import Head from "next/head";
import React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";

import AuthValidationErrors from "components/AuthValidationErrors";
import AppLayout from "components/Layouts/AppLayout";
import GuestLayout from "components/Layouts/GuestLayout";
import { useAuth } from "hooks/useAuth";
import { usePosts } from "hooks/usePosts";
import { toggleModal } from "store/modules/postModal";
import { setUserId } from "store/modules/postSearch";
import { RootState } from "store/types/rootState";

import type { NextPage } from "next";
import type { Errors } from "types/errors";

const Home: NextPage = () => {
  const [errors, setErrors] = useState<Errors>([]);
  const [inputPost, setInputPost] = useState("");

  const dispatch = useDispatch();
  const state = useSelector((state: RootState) => state);

  const { user, logout } = useAuth();
  const { posts, storePost } = usePosts();

  const submitForm = async (e: { preventDefault: () => void }) => {
    e.preventDefault();

    await storePost({ text: inputPost, setErrors });

    setInputPost("");
    dispatch(toggleModal());
  };

  return (
    <div>
      {user ? (
        <>
          <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <AppLayout>
            {/* Validation Errors */}
            <AuthValidationErrors errors={errors} />

            <button type="button" onClick={logout}>
              Logout
            </button>

            {state.postModal && (
              <form onSubmit={submitForm}>
                <textarea
                  id="name"
                  value={inputPost}
                  onChange={(e) => setInputPost(e.target.value)}
                />
                <button type="submit">投稿</button>
              </form>
            )}

            {posts?.data.map((post) => {
              return (
                <div key={post.id}>
                  <hr />
                  <div>{post.text}</div>
                  <div onClick={() => dispatch(setUserId(post.user_id))}>
                    {post.created_by}
                  </div>
                </div>
              );
            })}
          </AppLayout>
        </>
      ) : (
        <GuestLayout>
          <h2>ホーム</h2>
        </GuestLayout>
      )}
    </div>
  );
};

export default Home;
